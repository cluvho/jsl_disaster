<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.disaster.mapper.CommunityMapper">

    <!-- ====================================================== -->
    <!--                   ResultMap 정의                     -->
    <!-- ====================================================== -->

    <!-- 게시글 조회용 ResultMap (CommunityDTO 사용) -->
    <resultMap id="postDetailMap" type="com.disaster.domain.CommunityDTO">
        <id property="postId" column="post_id"/>
        <result property="memberId" column="member_id"/>
        <result property="addressId" column="address_id"/>
        <result property="muniCode" column="muni_code"/>
        <result property="disasterType" column="disaster_type"/>
        <result property="title" column="title"/>
        <result property="body" column="body"/>
        <result property="lat" column="lat"/>
        <result property="lon" column="lon"/>
        <result property="status" column="status"/>
        <result property="viewCount" column="view_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="nickname" column="nickname"/>
    </resultMap>

    <!-- 댓글 조회용 ResultMap (CommentDTO 사용) -->
    <resultMap id="reportedCommentMap" type="com.disaster.domain.CommentDTO">
        <id property="commentId" column="comment_id"/>
        <result property="postId" column="post_id"/>
        <result property="memberId" column="member_id"/>
        <result property="body" column="body"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="nickname" column="nickname"/>
        <result property="title" column="title"/>
    </resultMap>
    
    <!-- 마이페이지 전용 ResultMap -->
    <resultMap id="myPagePostMap" type="com.disaster.domain.CommunityDTO">
        <id property="postId" column="post_id"/>
        <result property="title" column="title"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- ====================================================== -->
    <!--                     기존 쿼리                         -->
    <!-- ====================================================== -->

    <!-- 전체 게시글 수 -->
    <select id="getTotalPostCount" resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE status != 'DELETED'
    </select>

    <!-- 전체 댓글 수 -->
    <select id="getTotalCommentCount" resultType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE status != 'DELETED'
    </select>

    <!-- 게시글 조회 (신고된 게시글 우선) -->
    <select id="findAllPostsWithReportedFirst" resultMap="postDetailMap">
        SELECT p.*, m.nickname
        FROM post p
        JOIN member m ON p.member_id = m.member_id
        WHERE p.status != 'DELETED'
        ORDER BY p.status DESC, p.created_at DESC
    </select>

    <!-- 신고된 댓글만 조회 (페이징 미적용) -->
    <select id="findReportedComments" resultMap="reportedCommentMap">
        SELECT c.*, m.nickname, p.title
        FROM comment c
        JOIN member m ON c.member_id = m.member_id
        JOIN post p ON c.post_id = p.post_id
        WHERE c.status = 'REPORTED'
        ORDER BY c.created_at DESC
    </select>
    
    <!-- 단일 게시글 조회 -->
    <select id="findPostById" resultMap="postDetailMap"> 
        SELECT p.*, m.nickname
        FROM post p
        JOIN member m ON p.member_id = m.member_id
        WHERE p.post_id = #{postId} AND p.status != 'DELETED'
    </select>

    <!-- ====================================================== -->
    <!--                      마이페이지 쿼리                    -->
    <!-- ====================================================== -->

    <!-- 특정 회원이 작성한 글 목록 조회 (최신순) -->
    <select id="findByMemberId" resultMap="myPagePostMap">
        SELECT post_id, title, created_at
        FROM post
        WHERE member_id = #{memberId} AND status != 'DELETED'
        ORDER BY created_at DESC
    </select>

    <!-- 특정 회원이 댓글을 작성한 글 목록 조회 (최신 댓글 순) -->
    <select id="findPostsCommentedByMemberId" resultMap="myPagePostMap">
        SELECT p.post_id, p.title, p.created_at
        FROM post p
        JOIN comment c ON p.post_id = c.post_id
        WHERE c.member_id = #{memberId} AND p.status != 'DELETED'
        GROUP BY p.post_id, p.title, p.created_at
        ORDER BY MAX(c.created_at) DESC
    </select>

    <!-- ====================================================== -->
    <!--             ↓↓↓ [관리자 기능] 쿼리 추가된 부분 ↓↓↓           -->
    <!-- ====================================================== -->

    <!-- [관리자] 게시글 목록 조회 (페이징) -->
    <select id="findPostsForAdmin" parameterType="map" resultMap="postDetailMap">
        SELECT p.*, m.nickname
        FROM post p
        JOIN member m ON p.member_id = m.member_id
        ORDER BY p.created_at DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- [관리자] 신고된 댓글 목록 조회 (페이징) -->
    <select id="findReportedCommentsPaginated" resultMap="reportedCommentMap">
        SELECT c.*, m.nickname, p.title
        FROM comment c
        JOIN member m ON c.member_id = m.member_id
        JOIN post p ON c.post_id = p.post_id
        WHERE c.status = 'REPORTED'
        ORDER BY c.created_at DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- [관리자] 신고된 댓글 총 개수 -->
    <select id="countReportedComments" resultType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE status = 'REPORTED'
    </select>

    <!-- [관리자] 삭제된(Soft-deleted) 게시글 목록 조회 (페이징) -->
    <select id="findSoftDeletedPostsPaginated" resultMap="postDetailMap">
        SELECT p.*, m.nickname
        FROM post p
        JOIN member m ON p.member_id = m.member_id
        WHERE p.status = 'DELETED'
        ORDER BY p.updated_at DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- [관리자] 삭제된(Soft-deleted) 게시글 총 개수 -->
    <select id="countSoftDeletedPosts" resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE status = 'DELETED'
    </select>

    <!-- [관리자] 삭제된(Soft-deleted) 댓글 목록 조회 (페이징) -->
    <select id="findSoftDeletedCommentsPaginated" resultMap="reportedCommentMap">
        SELECT c.*, m.nickname, p.title
        FROM comment c
        JOIN member m ON c.member_id = m.member_id
        JOIN post p ON c.post_id = p.post_id
        WHERE c.status = 'DELETED'
        ORDER BY c.updated_at DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- [관리자] 삭제된(Soft-deleted) 댓글 총 개수 -->
    <select id="countSoftDeletedComments" resultType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE status = 'DELETED'
    </select>

    <!-- 게시글 Soft-delete (상태 변경) -->
    <update id="softDeletePostById" parameterType="long">
        UPDATE post
        SET status = 'DELETED', updated_at = NOW()
        WHERE post_id = #{postId}
    </update>

    <!-- 댓글 Soft-delete (상태 변경) -->
    <update id="softDeleteCommentById" parameterType="long">
        UPDATE comment
        SET status = 'DELETED', updated_at = NOW()
        WHERE comment_id = #{commentId}
    </update>

    <!-- 게시글 Hard-delete (DB에서 완전 삭제) -->
    <delete id="hardDeletePostById" parameterType="long">
        DELETE FROM post WHERE post_id = #{postId}
    </delete>

    <!-- 댓글 Hard-delete (DB에서 완전 삭제) -->
    <delete id="hardDeleteCommentById" parameterType="long">
        DELETE FROM comment WHERE comment_id = #{commentId}
    </delete>
    
    <!-- @Deprecated 처리된 기존 delete 쿼리들 -->
    <update id="deletePostById" parameterType="long">
        UPDATE post
        SET status = 'DELETED', updated_at = NOW()
        WHERE post_id = #{postId}
    </update>

    <update id="deleteCommentById" parameterType="long">
        UPDATE comment
        SET status = 'DELETED', updated_at = NOW()
        WHERE comment_id = #{commentId}
    </update>

</mapper>